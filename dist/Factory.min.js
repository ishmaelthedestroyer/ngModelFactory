angular.module("ngModelFactory.Factory",["EventEmitter","Endpoint","Util"]).service("ngModelFactory.Factory",["$log","$q","ngModelFactory.Model","ngModelFactory.mixins","Endpoint","EventEmitter","Util",function(a,b,c,d,e,f,g){var h=function(a,b){if(!(this instanceof h))return new h(a,b);f.call(this),g.extend(this,d);var c=this;return c.store={},c.Model=a,c.$init(b),c};return g.inherits(h,f),h.prototype.$dump=function(){var a=this,b=[];for(var c in a.store)a.store.hasOwnProperty(c)&&b.push(a.store[c]);return b},h.prototype.$wrap=function(a){var b,c=this;if(a._id&&c.store[a._id]){var d={};b=c.store[a._id];for(var e in a)a.hasOwnProperty(e)&&(d[e]=angular.copy(c[e]),b[e]=a[e]);c.emit("$update",b,d),c.store[a._id].emit("$update",b,d)}else b=c.Model.apply(this,arguments),b.$init(c._$config),c.$registerListeners(b),c.store[b._id]=b,c.emit("$create",b);return b},h.prototype.$registerListeners=function(b){var c=this;return b.on("$update",function(d,e){a.debug(c._$config.TAG+"registerEvents::$update",d,e),d&&d._id&&e&&e._id&&d._id!==e._id&&(a.debug(c._$config.TAG+"registerEvents","_id updated."),delete c.store[e._id],c.store[b._id]=b),c.emit("$update",b,e)}),b.on("$delete",function(b){a.debug(c._$config.TAG+"registerEvents::$delete",b),delete c.store[b._id],c.emit("$delete",b)}),c},h.prototype.$create=function(){var a=this,b=a.$wrap.apply(this,arguments);return b._$isLocal=!0,b},h.prototype.$find=function(c,d){var e=this,f=b.defer(),h="find",i=g.extend({method:e._$config.endpoints[h].method,path:e._$config.endpoints[h].path,map:{":id":c},ignoreCache:!1,throttle:!0},d);if(!i||!i.ignoreCache)for(var j in e.store)if(e.store.hasOwnProperty(j)&&j===c)return a.debug(e._$config.TAG+"$find","Found model in cache.",e.store[j]),f.resolve(e.store[j]),f.promise;return e.$request(i).then(function(a){var b=e.$wrap(a);f.resolve(b),e.emit("$find",b)})["catch"](function(a){f.reject(a)}),f.promise},h.prototype.$list=function(a){var c=this,d=b.defer(),e="list",f=g.extend({method:c._$config.endpoints[e].method,path:c._$config.endpoints[e].path,ignoreCache:!1,throttle:!0},a);return c.$request(f).then(function(a){var b=[];angular.forEach(a,function(a){b.push(c.$wrap(a))}),d.resolve(b),c.emit("$list",b)})["catch"](function(a){d.reject(a)}),d.promise},h.prototype.$populate=function(a,c){var d=this,e=b.defer(),f="populate",h=g.extend({method:d._$config.endpoints[f].method,path:d._$config.endpoints[f].path,data:{ids:a},ignoreCache:!1,throttle:!0},c);return d.$request(h).then(function(a){var b=[];angular.forEach(a,function(a){b.push(d.$wrap(a))}),e.resolve(b),d.emit("$populate",b)})["catch"](function(a){e.reject(a)}),e.promise},h.prototype.$populateSync=function(){var a=b.defer();return a.promise},h.prototype.$query=function(a){if(!a)throw new Error("Must pass query to `Factory.$query()`. If you want the entire dataset, use `Factory.$dump().`");if(!g.isJSON(a)&&!g.isFunction(a))throw new Error("Must pass object or function to `Factory.$query()`.");return g.isFunction(a)?this.$dump().reduce(function(b,c){return a(c)&&b.push(c),b},[]):this.$dump().reduce(function(b,c){for(var d in a)if(a.hasOwnProperty(d))switch(typeof a[d]){case"function":if(!a[d](c[d],c))return b;break;case"boolean":if(a[d]!==c[d])return b;break;case"string":if(a[d]!==c[d])return b;break;case"object":if(a[d]!==c[d])return b;break;default:return b}return b.push(c),b},[])},h}]);